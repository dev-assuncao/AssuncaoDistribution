// <auto-generated />
using System;
using AssuncaoDistribution.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AssuncaoDistribution.Migrations
{
    [DbContext(typeof(AssuncaoDistributionContext))]
    [Migration("20220406001943_CorrectionsInDatabase")]
    partial class CorrectionsInDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.10");

            modelBuilder.Entity("AssuncaoDistribution.Models.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Birthday")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CnpjOrCpf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ContactCli")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Uf")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("AssuncaoDistribution.Models.ItemsOrderSale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AmountOrder")
                        .HasColumnType("int");

                    b.Property<double>("PriceOrder")
                        .HasColumnType("double");

                    b.Property<int>("ProdId")
                        .HasColumnType("int");

                    b.Property<int>("SalesId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdId");

                    b.HasIndex("SalesId");

                    b.ToTable("ItemsOrderSales");
                });

            modelBuilder.Entity("AssuncaoDistribution.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AmountProd")
                        .HasColumnType("int");

                    b.Property<int>("Measures")
                        .HasColumnType("int");

                    b.Property<int>("MeasuresId")
                        .HasColumnType("int");

                    b.Property<string>("NameProd")
                        .HasColumnType("longtext");

                    b.Property<double>("PriceProd")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AssuncaoDistribution.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("AddresProv")
                        .HasColumnType("longtext");

                    b.Property<string>("CepProv")
                        .HasColumnType("longtext");

                    b.Property<string>("CityProv")
                        .HasColumnType("longtext");

                    b.Property<string>("CnpjOrCpfProv")
                        .HasColumnType("longtext");

                    b.Property<string>("Contact")
                        .HasColumnType("longtext");

                    b.Property<string>("CorporateName")
                        .HasColumnType("longtext");

                    b.Property<string>("DistrictProv")
                        .HasColumnType("longtext");

                    b.Property<string>("EmailProv")
                        .HasColumnType("longtext");

                    b.Property<string>("FantasyName")
                        .HasColumnType("longtext");

                    b.Property<int>("Fax")
                        .HasColumnType("int");

                    b.Property<int>("PhoneProv")
                        .HasColumnType("int");

                    b.Property<double>("Portage")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("AssuncaoDistribution.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Cod")
                        .HasColumnType("int");

                    b.Property<double>("PriceOrder")
                        .HasColumnType("double");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchDate")
                        .HasColumnType("datetime(6)");

                    b.HasKey("Id");

                    b.HasIndex("ProviderId");

                    b.ToTable("PurchaseOrders");
                });

            modelBuilder.Entity("AssuncaoDistribution.Models.PurchaseOrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<int>("CodPurchase")
                        .HasColumnType("int");

                    b.Property<double>("PriceItems")
                        .HasColumnType("double");

                    b.Property<int>("ProdId")
                        .HasColumnType("int");

                    b.Property<int>("PurchId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProdId");

                    b.HasIndex("PurchId");

                    b.ToTable("PurchaseOrderItems");
                });

            modelBuilder.Entity("AssuncaoDistribution.Models.SalesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOrder")
                        .HasColumnType("datetime(6)");

                    b.Property<double>("PriceSale")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("SalesOrders");
                });

            modelBuilder.Entity("AssuncaoDistribution.Models.ItemsOrderSale", b =>
                {
                    b.HasOne("AssuncaoDistribution.Models.Products", "Prod")
                        .WithMany()
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssuncaoDistribution.Models.SalesOrder", "Sales")
                        .WithMany()
                        .HasForeignKey("SalesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prod");

                    b.Navigation("Sales");
                });

            modelBuilder.Entity("AssuncaoDistribution.Models.PurchaseOrder", b =>
                {
                    b.HasOne("AssuncaoDistribution.Models.Provider", "Providers")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Providers");
                });

            modelBuilder.Entity("AssuncaoDistribution.Models.PurchaseOrderItem", b =>
                {
                    b.HasOne("AssuncaoDistribution.Models.Products", "Prod")
                        .WithMany()
                        .HasForeignKey("ProdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AssuncaoDistribution.Models.PurchaseOrder", "Purch")
                        .WithMany()
                        .HasForeignKey("PurchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Prod");

                    b.Navigation("Purch");
                });

            modelBuilder.Entity("AssuncaoDistribution.Models.SalesOrder", b =>
                {
                    b.HasOne("AssuncaoDistribution.Models.Client", "Clients")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clients");
                });
#pragma warning restore 612, 618
        }
    }
}
